info:
  contact: {}
paths:
  /api/v1/login:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password(RSA Encrypted)
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login
      tags:
      - User
  /api/v1/ping:
    get:
      consumes:
      - application/json
      description: Ping-Pong
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Ping pong
      tags:
      - Ping
  /api/v1/register:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password(RSA Encrypted)
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Register
      tags:
      - User
  /api/v1/test-mail:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Send Test Mail
      tags:
      - User
swagger: "2.0"
