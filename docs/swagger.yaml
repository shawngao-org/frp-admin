info:
  contact: {}
paths:
  /api/v1/sys/ping:
    post:
      consumes:
      - application/json
      description: Ping-Pong
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Ping pong
      tags:
      - System
  /api/v1/user/confirm-register:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Verify code (Temp code)
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Confirm register
      tags:
      - User
  /api/v1/user/forget-password:
    post:
      consumes:
      - multipart/form-data
      description: Send forget password mail, but front-end must have "http://xxx.xxx.xxx/reset-password/:code"
        router.
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Send Forget Password Mail
      tags:
      - User
  /api/v1/user/login:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password(RSA Encrypted)
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login
      tags:
      - User
  /api/v1/user/register:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Name
        in: formData
        name: name
        required: true
        type: string
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password(RSA Encrypted)
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Register
      tags:
      - User
  /api/v1/user/reset-password:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: New Password (RSA Encrypted)
        in: formData
        name: password
        required: true
        type: string
      - description: Verify code (Temp code)
        in: formData
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Verify tmp code and reset password
      tags:
      - User
  /api/v1/user/verify-register:
    post:
      consumes:
      - multipart/form-data
      description: Send verify mail, but front-end must have "http://xxx.xxx.xxx/verify-register/:code"
        router.
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Send verify Mail
      tags:
      - User
swagger: "2.0"
